{"version":3,"sources":["App.js","index.js"],"names":["SimpleCard","name","imgLink","className","id","url","to","firstLetterCapitalize","src","alt","Img","style","width","height","Ability","effect","toUpperCase","slice","PokePage","props","fetchData","a","axios","result","setState","data","abilityLink","abilities","fetchAbilities","key","abilityLinks","state","push","ability","map","link","effect_entries","this","imgLinks","sprites","imgLinkArr","reverse","console","log","weight","React","Component","App","pokemons","addCards","fetch","json","results","front_default","exact","path","component","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2d69dda6.chunk.js","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport {BrowserRouter, Route, NavLink} from \"react-router-dom\"\nimport './App.css'\n\nconst SimpleCard = ({name, imgLink, className, url, id}) => {\n    return (\n        <NavLink to={`/pokemon/${id}`} className={className}>\n            <div>\n                <p>{firstLetterCapitalize(name)}</p>\n                <img src={imgLink} alt={name}/>\n            </div>\n        </NavLink>\n    )\n}\n\nconst Img = ({src}) => {\n    return (\n        <img src={src} alt=\"\" style={{width: '', height: '15vh'}}/>\n    )\n}\n\nconst Ability = ({name, effect}) => {\n    return(\n        <div className={\"ability\"}>{firstLetterCapitalize(name)}: {effect}</div>\n    )\n}\n\nconst firstLetterCapitalize = (name) => name[0].toUpperCase() + name.slice(1)\n\nclass PokePage extends React.Component {\n    constructor (props) {\n        super(props)\n        this.state = {}\n    }\n\n    fetchData = async (url) => {\n        const result = await axios(url)\n        await this.setState({data: result.data, abilityLink: [], abilities: []})\n    }\n\n    fetchAbilities = async () => {\n        let abilities\n        let abilityLinks = []\n        abilities = this.state.data.abilities\n        for (let key in abilities) {\n            abilityLinks.push(abilities[key].ability.url)\n        }\n        await abilityLinks.map(async (link) => {\n            const result = (await axios(link)).data\n            await this.setState({\n                abilities: [...this.state.abilities, {name: result.name, effect: result.effect_entries[0].effect}]\n            })\n        })\n    }\n\n    async componentDidMount () {\n        await this.fetchData(this.props.url)\n        await this.fetchAbilities()\n    }\n\n    render () {\n        if (!this.state.abilities) {\n            return null\n        } else {\n            let imgLinks = {...this.state.data.sprites}\n            let imgLinkArr = []\n            for (let key in imgLinks) {\n                if (imgLinks[key] !== null) {\n                    imgLinkArr.push(imgLinks[key])\n                }\n            }\n            imgLinkArr.reverse()\n            console.log(this.state.abilities[0])\n            return (\n                <div className=\"pokeCard\">\n                    <div>\n                        {firstLetterCapitalize(this.state.data.name)}\n                    </div>\n                    <div>\n                        {imgLinkArr.map((imgLink) => <Img src={imgLink} alt={this.state.data.name} key={imgLink}/>)}\n                    </div>\n                    <div>\n                        <p>Weight: {this.state.data.weight / 10 + 'kg'}</p>\n                        <p>Height: {this.state.data.height / 10 + 'm'}</p>\n                    </div>\n                    <div>\n                        {this.state.abilities.map(({name, effect}) => <Ability name={name} effect={effect} key={name+effect}/>)}\n                    </div>\n                    <NavLink to={`/`}>\n                        <div>\n                            <button>Back</button>\n                        </div>\n                    </NavLink>\n                </div>\n            )\n        }\n    }\n}\n\n\nclass App extends React.Component {\n    state = {\n        pokemons: []\n    }\n\n    addCards = async () => {\n        const data = await (await fetch('https://pokeapi.co/api/v2/pokemon/?offset=0&limit=120\"')).json()\n        const results = data.results\n        results.map(async ({name, url}) => {\n            const result = await (await fetch(url)).json()\n            const imgLink = result.sprites.front_default\n            const id = result.id\n            await this.setState({pokemons: [...this.state.pokemons, {name, url, imgLink, id}]})\n        })\n    }\n\n    async componentDidMount () {\n        await this.addCards()\n    }\n\n    render () {\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <header></header>\n                    <div className='content'>\n                        <Route exact path={`/`}\n                               component={() => {\n                                   return this.state.pokemons.map(({name, imgLink, url, id}) =>\n                                       <SimpleCard\n                                           className='card'\n                                           name={name}\n                                           url={url}\n                                           key={name + imgLink}\n                                           imgLink={imgLink}\n                                           id={id}\n                                       />\n                                   )\n                               }\n                               }\n                        />\n                        {this.state.pokemons.map(({id, url}) =>\n                            <Route path={`/pokemon/${id}`} key={id} render={() => <PokePage url={url}/>}/>\n                        )}\n                    </div>\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}