{"version":3,"sources":["App.js","index.js"],"names":["SimpleCard","name","imgLink","className","id","to","firstLetterCapitalize","src","alt","Img","style","width","height","Ability","effect","fontWeight","toUpperCase","slice","PokePage","props","fetchData","url","a","fetch","json","result","setState","data","abilityLink","abilities","fetchAbilities","key","abilityLinks","state","push","ability","map","link","axios","effect_entries","this","imgLinks","sprites","imgLinkArr","reverse","weight","React","Component","App","pokemons","addCards","results","front_default","exact","path","component","render","ReactDOM","document","getElementById"],"mappings":"wjBAKA,IAAMA,EAAa,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,UAAWC,EAAQ,EAARA,GAC3C,OACI,kBAAC,IAAD,CAASC,GAAE,2BAAsBD,GAAMD,UAAWA,GAC9C,6BACI,2BAAIG,EAAsBL,IAC1B,yBAAKM,IAAKL,EAASM,IAAKP,OAMlCQ,EAAM,SAAC,GAAW,IAAVF,EAAS,EAATA,IACV,OACI,yBAAKA,IAAKA,EAAKC,IAAI,GAAGE,MAAO,CAACC,MAAO,GAAIC,OAAQ,WAInDC,EAAU,SAAC,GAAoB,IAAnBZ,EAAkB,EAAlBA,KAAMa,EAAY,EAAZA,OACpB,OACI,yBAAKX,UAAW,WAAW,0BAAMO,MAAO,CAACK,WAAW,QAAST,EAAsBL,IAAnF,KAAmGa,IAIrGR,EAAwB,SAACL,GAAD,OAAUA,EAAK,GAAGe,cAAgBf,EAAKgB,MAAM,IAErEC,E,YACF,WAAaC,GAAQ,IAAD,8BAChB,4CAAMA,KAIVC,UALoB,uCAKR,WAAOC,GAAP,eAAAC,EAAA,sEACoBC,MAAMF,GAD1B,8BACgCG,OADhC,cACFC,EADE,gBAEF,EAAKC,SAAS,CAACC,KAAMF,EAAQG,YAAa,GAAIC,UAAW,KAFvD,2CALQ,wDASpBC,eAToB,sBASH,gCAAAR,EAAA,sDAIb,IAASS,KAFLC,EAAe,GACnBH,EAAY,EAAKI,MAAMN,KAAKE,UAExBG,EAAaE,KAAKL,EAAUE,GAAKI,QAAQd,KALhC,gBAOPW,EAAaI,IAAb,+BAAAd,EAAA,MAAiB,WAAOe,GAAP,eAAAf,EAAA,sEACGgB,IAAMD,GADT,cACbZ,EADa,OACgBE,KADhB,SAEb,EAAKD,SAAS,CAChBG,UAAU,GAAD,mBAAM,EAAKI,MAAMJ,WAAjB,CAA4B,CAAC5B,KAAMwB,EAAOxB,KAAMa,OAAQW,EAAOc,eAAe,GAAGzB,YAH3E,2CAAjB,uDAPO,2CAPb,EAAKmB,MAAQ,GAFG,E,2MAyBVO,KAAKpB,UAAUoB,KAAKrB,MAAME,K,uBAC1BmB,KAAKV,iB,qIAGJ,IAAD,OACN,GAAKU,KAAKP,MAAMJ,UAET,CACH,IAAIY,E,yVAAQ,IAAOD,KAAKP,MAAMN,KAAKe,SAC/BC,EAAa,GACjB,IAAK,IAAIZ,KAAOU,EACU,OAAlBA,EAASV,IACTY,EAAWT,KAAKO,EAASV,IAIjC,OADAY,EAAWC,UAEP,yBAAKzC,UAAU,YACX,yBAAKA,UAAW,YACXG,EAAsBkC,KAAKP,MAAMN,KAAK1B,OAE3C,6BACK0C,EAAWP,KAAI,SAAClC,GAAD,OAAa,kBAAC,EAAD,CAAKK,IAAKL,EAASM,IAAK,EAAKyB,MAAMN,KAAK1B,KAAM8B,IAAK7B,QAEpF,6BACI,sCAAYsC,KAAKP,MAAMN,KAAKkB,OAAS,GAAK,MAC1C,sCAAYL,KAAKP,MAAMN,KAAKf,OAAS,GAAK,MAE9C,6BACK4B,KAAKP,MAAMJ,UAAUO,KAAI,gBAAEnC,EAAF,EAAEA,KAAMa,EAAR,EAAQA,OAAR,OAAoB,kBAAC,EAAD,CAASb,KAAMA,EAAMa,OAAQA,EACpBiB,IAAK9B,EAAOa,QAEvE,kBAAC,IAAD,CAAST,GAAE,aACP,6BACI,2CA5BhB,OAAO,S,GAhCIyC,IAAMC,WA6HdC,E,2MAtDXf,MAAQ,CACJgB,SAAU,I,EAGdC,S,sBAAW,4BAAA5B,EAAA,sEACagB,IAAM,yDADnB,OACDX,EADC,OAC6EA,KACpEA,EAAKwB,QACbf,IAAR,uCAAY,qCAAAd,EAAA,6DAAQrB,EAAR,EAAQA,KAAMoB,EAAd,EAAcA,IAAd,SACciB,IAAMjB,GADpB,cACFI,EADE,OAC0BE,KAC5BzB,EAAUuB,EAAOiB,QAAQU,cACzBhD,EAAKqB,EAAOrB,GAHV,SAIF,EAAKsB,SAAS,CAACuB,SAAS,GAAD,mBAAM,EAAKhB,MAAMgB,UAAjB,CAA2B,CAAChD,OAAMoB,MAAKnB,UAASE,UAJrE,2CAAZ,uDAHO,2C,6MAYDoC,KAAKU,W,qIAGJ,IAAD,OACN,OACI,kBAAC,IAAD,KACI,yBAAK/C,UAAU,OACX,gCACI,kBAAC,IAAD,CAASE,GAAE,aACR,yBAAKF,UAAU,aAGtB,yBAAKA,UAAU,WACX,kBAAC,IAAD,CAAOkD,OAAK,EAACC,KAAI,YACVC,UAAW,WACP,OAAO,EAAKtB,MAAMgB,SAASb,KAAI,gBAAEnC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAASmB,EAAjB,EAAiBA,IAAKjB,EAAtB,EAAsBA,GAAtB,OAC3B,kBAAC,EAAD,CACID,UAAU,OACVF,KAAMA,EACNoB,IAAKA,EACLU,IAAK9B,EAAOC,EACZA,QAASA,EACTE,GAAIA,UAMtBoC,KAAKP,MAAMgB,SAASb,KAAI,gBAAEhC,EAAF,EAAEA,GAAIiB,EAAN,EAAMA,IAAN,OACrB,kBAAC,IAAD,CAAOiC,KAAI,2BAAsBlD,GAAM2B,IAAK3B,EAAIoD,OAAQ,kBAAM,kBAAC,EAAD,CAAUnC,IAAKA,iB,GA9CvFyB,IAAMC,WC/FxBU,IAASD,OAAO,kBAAC,EAAD,MAASE,SAASC,eAAe,W","file":"static/js/main.addc18fe.chunk.js","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport {BrowserRouter, Route, NavLink} from \"react-router-dom\"\nimport './App.css'\n\nconst SimpleCard = ({name, imgLink, className, id}) => {\n    return (\n        <NavLink to={`/pokeAPI/pokemon/${id}`} className={className}>\n            <div>\n                <p>{firstLetterCapitalize(name)}</p>\n                <img src={imgLink} alt={name}/>\n            </div>\n        </NavLink>\n    )\n}\n\nconst Img = ({src}) => {\n    return (\n        <img src={src} alt=\"\" style={{width: '', height: '15vh'}}/>\n    )\n}\n\nconst Ability = ({name, effect}) => {\n    return (\n        <div className={\"ability\"}><span style={{fontWeight:\"700\"}}>{firstLetterCapitalize(name)}</span>: {effect}</div>\n    )\n}\n\nconst firstLetterCapitalize = (name) => name[0].toUpperCase() + name.slice(1)\n\nclass PokePage extends React.Component {\n    constructor (props) {\n        super(props)\n        this.state = {}\n    }\n\n    fetchData = async (url) => {\n        const result = await (await fetch(url)).json()\n        await this.setState({data: result, abilityLink: [], abilities: []})\n    }\n    fetchAbilities = async () => {\n        let abilities\n        let abilityLinks = []\n        abilities = this.state.data.abilities\n        for (let key in abilities) {\n            abilityLinks.push(abilities[key].ability.url)\n        }\n        await abilityLinks.map(async (link) => {\n            const result = (await axios(link)).data\n            await this.setState({\n                abilities: [...this.state.abilities, {name: result.name, effect: result.effect_entries[0].effect}]\n            })\n        })\n    }\n\n    async componentDidMount () {\n        await this.fetchData(this.props.url)\n        await this.fetchAbilities()\n    }\n\n    render () {\n        if (!this.state.abilities) {\n            return null\n        } else {\n            let imgLinks = {...this.state.data.sprites}\n            let imgLinkArr = []\n            for (let key in imgLinks) {\n                if (imgLinks[key] !== null) {\n                    imgLinkArr.push(imgLinks[key])\n                }\n            }\n            imgLinkArr.reverse()\n            return (\n                <div className=\"pokeCard\">\n                    <div className={\"pokeName\"}>\n                        {firstLetterCapitalize(this.state.data.name)}\n                    </div>\n                    <div>\n                        {imgLinkArr.map((imgLink) => <Img src={imgLink} alt={this.state.data.name} key={imgLink}/>)}\n                    </div>\n                    <div>\n                        <p>Weight: {this.state.data.weight / 10 + 'kg'}</p>\n                        <p>Height: {this.state.data.height / 10 + 'm'}</p>\n                    </div>\n                    <div>\n                        {this.state.abilities.map(({name, effect}) => <Ability name={name} effect={effect}\n                                                                               key={name + effect}/>)}\n                    </div>\n                    <NavLink to={`/pokeAPI/`}>\n                        <div>\n                            <button>Back</button>\n                        </div>\n                    </NavLink>\n                </div>\n            )\n        }\n    }\n}\n\n\nclass App extends React.Component {\n    state = {\n        pokemons: []\n    }\n\n    addCards = async () => {\n        const data = (await axios('https://pokeapi.co/api/v2/pokemon/?offset=0&limit=24\"')).data\n        const results = data.results\n        results.map(async ({name, url}) => {\n            const result = (await axios(url)).data\n            const imgLink = result.sprites.front_default\n            const id = result.id\n            await this.setState({pokemons: [...this.state.pokemons, {name, url, imgLink, id}]})\n        })\n    }\n\n    async componentDidMount () {\n        await this.addCards()\n    }\n\n    render () {\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <header>\n                        <NavLink to={`/pokeAPI/`}>\n                           <div className=\"header\"></div>\n                        </NavLink>\n                    </header>\n                    <div className='content'>\n                        <Route exact path={`/pokeAPI/`}\n                               component={() => {\n                                   return this.state.pokemons.map(({name, imgLink, url, id}) =>\n                                       <SimpleCard\n                                           className='card'\n                                           name={name}\n                                           url={url}\n                                           key={name + imgLink}\n                                           imgLink={imgLink}\n                                           id={id}\n                                       />\n                                   )\n                               }\n                               }\n                        />\n                        {this.state.pokemons.map(({id, url}) =>\n                            <Route path={`/pokeAPI/pokemon/${id}`} key={id} render={() => <PokePage url={url}/>}/>\n                        )}\n                    </div>\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}